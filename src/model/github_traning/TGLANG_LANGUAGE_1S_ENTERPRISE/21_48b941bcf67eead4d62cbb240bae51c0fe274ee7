
// Формирует строку запроса в формате URL-encoded (query string)
Функция СформироватьСтрокуЗапроса(ПараметрыЗапроса) Экспорт
    СтрокаЗапроса = "";
    
    Если ПараметрыЗапроса.Количество() > 0 Тогда
        Для каждого Элемент из ПараметрыЗапроса Цикл
            Если НЕ ПустаяСтрока(СтрокаЗапроса) Тогда
                СтрокаЗапроса = СтрокаЗапроса + "&";
            КонецЕсли;
            СтрокаЗапроса = СтрокаЗапроса + КодироватьСтроку(Элемент.Ключ, СпособКодированияСтроки.КодировкаURL) + 
                "=" + КодироватьСтроку(Значение1СвЗначениеJS(Элемент.Значение), СпособКодированияСтроки.КодировкаURL);
        КонецЦикла;
    КонецЕсли;
    
    Возврат СтрокаЗапроса;
КонецФункции

Функция СформироватьСтруктуруПараметровЗапроса(СтрокаИменДопустимыхПараметров, СтруктураОбязательныхПараметров, СтруктураДополнительныхПараметров=Неопределено) Экспорт
    СтруктураПараметровЗапроса    = Новый Структура;
    СтруктураДопустимыхПараметров = Новый Структура(СтрокаИменДопустимыхПараметров);

    Если СтруктураОбязательныхПараметров <> Неопределено Тогда
        ДобавитьПараметры(СтруктураПараметровЗапроса, СтруктураОбязательныхПараметров, СтруктураДопустимыхПараметров);
    КонецЕсли;

    Если СтруктураДополнительныхПараметров <> Неопределено Тогда
        ДобавитьПараметры(СтруктураПараметровЗапроса, СтруктураДополнительныхПараметров, СтруктураДопустимыхПараметров);
    КонецЕсли;

    Возврат СтруктураПараметровЗапроса;
КонецФункции

Процедура ДобавитьПараметры(СтруктураПараметровЗапроса, СтруктураСоЗначениямиПараметров, СтруктураДопустимыхПараметров)
    Для каждого ЭлементСтруктуры из СтруктураСоЗначениямиПараметров Цикл        
        Если НЕ СтруктураДопустимыхПараметров.Свойство(ЭлементСтруктуры.Ключ) Тогда
            ВызватьИсключение ИсключениеНедопустимыйПараметрЗапроса(ЭлементСтруктуры.Ключ);
        КонецЕсли;                       
        СтруктураПараметровЗапроса.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
    КонецЦикла;
КонецПроцедуры

Функция Значение1СвЗначениеJS(Значение)
    Тип = ТипЗнч(Значение);
    Если (Значение = Неопределено) или (Значение = Null) Тогда 
        Возврат "null";
    ИначеЕсли (Тип = Тип("Дата")) Тогда 
        Возврат """" + ДатаJSON(Значение) + "Z""";
    ИначеЕсли Тип = Тип("Булево") Тогда
        Возврат ?(Значение = Истина, "true", "false");
    ИначеЕсли (Тип = Тип("УникальныйИдентификатор")) Тогда 
        Возврат """" + Значение + """"; 
    КонецЕсли;
    Возврат Строка(Значение);
КонецФункции

Функция ДатаJSON(Знач Дата)
    
    Если Не ЗначениеЗаполнено(Дата) Тогда
        Возврат "";
    КонецЕсли;
    
    Возврат "" + Год(Дата) + "-" + ФорматДвузначноеЧисло(Месяц(Дата)) + "-" + ФорматДвузначноеЧисло(День(Дата)) + "T"
            + ФорматДвузначноеЧисло(Час(Дата)) + ":" + ФорматДвузначноеЧисло(Минута(Дата)) + ":" + ФорматДвузначноеЧисло(Секунда(Дата));

КонецФункции

Функция ФорматДвузначноеЧисло(ЗначениеЧисло)
    С = Строка(ЗначениеЧисло);
    Если СтрДлина(С) < 2 Тогда
        С = "0" + С;
    КонецЕсли;    
    Возврат С;
КонецФункции

Функция ИсключениеНедопустимыйПараметрЗапроса(ИмяПараметра)
    Возврат "В запрос передан недопустимый параметр " + ИмяПараметра;
КонецФункции