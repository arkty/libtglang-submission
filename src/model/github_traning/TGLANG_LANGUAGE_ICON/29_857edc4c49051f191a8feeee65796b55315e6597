#
# Euler problem 46
#
# """
# It was proposed by Christian Goldbach that every odd composite number can be 
# written as the sum of a prime and twice a square.
# 
# 9 = 7 + 2×1^2
# 15 = 7 + 2×2^2
# 21 = 3 + 2×3^2
# 25 = 7 + 2×3^2
# 27 = 19 + 2×2^2
# 33 = 31 + 2×1^2
# 
# It turns out that the conjecture was false.
# 
# What is the smallest odd composite that cannot be written as the 
# sum of a prime and twice a square?
#
# """
#
# This program was written by Hakan Kjellerstrand (hakank@gmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#
link factors, lists, strings

global primes

procedure main()
   problem46()
end

procedure problem46()

    every i := 3 to 10000 by 2 do {
        if isprime(i) then next
        s := sqrt(i/2)
        found := 0
        every j := 1 to s do {
            ts := j*j*2
            if isprime(i-ts) then {
                found := 1
                break
            }
        }
        if found = 0 then {
            break
        }
    }
    write(i)

end


# brute force, and very slow...
procedure problem46b()
    
    primes := [] # array containing primes
    sprimes := set() # set containing primes
    p := 1
    while p < 10000 do { 
        p := nxtprime(p+1) 
        put(primes,p) 
        insert(sprimes, p)
    }

    i := 3
    c := 1
    while c = 1  & i < 6000 do {
        if member(sprimes, i) then { i+:=2; next}
        if cc := check(i) then {
        } else {
            write(i, " can not be decomposed") 
            c := 0
            last
        }
        if c = 1 then i +:= 2
    }
    write(i)
end

procedure check(n)
    p := 1
    i := 1
    while i < n & primes[p] < n do {
        if primes[p]+2*i^2 = n then return [primes[p], i]
        if i >= primes[p] then {p +:= 1; i := 0}
        i +:= 1
    }
    fail
end

